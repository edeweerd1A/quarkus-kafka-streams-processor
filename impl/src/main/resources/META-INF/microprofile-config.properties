kafka-streams.default.production.exception.handler=io.quarkiverse.kafkastreamsprocessor.impl.errors.GlobalDLQProductionExceptionHandler
kafka-streams.default.deserialization.exception.handler=io.quarkiverse.kafkastreamsprocessor.impl.errors.LogAndSendToDlqExceptionHandler
# https://docs.confluent.io/platform/current/installation/configuration/consumer-configs.html#consumerconfigs_auto.offset.reset
kafka-streams.auto.offset.reset=latest
%test.kafka-streams.auto.offset.reset=earliest
# Uncomment this part to override at runtime default values for the Retry of the RetryDecoratorDelegate
io.quarkiverse.kafkastreamsprocessor.impl.decorator.processor.RetryDecoratorDelegate/retryableProcess/Retry/maxRetries=${kafkastreamsprocessor.retry.max-retries}
io.quarkiverse.kafkastreamsprocessor.impl.decorator.processor.RetryDecoratorDelegate/retryableProcess/Retry/delay=${kafkastreamsprocessor.retry.delay}
io.quarkiverse.kafkastreamsprocessor.impl.decorator.processor.RetryDecoratorDelegate/retryableProcess/Retry/delayUnit=${kafkastreamsprocessor.retry.delay-unit}
io.quarkiverse.kafkastreamsprocessor.impl.decorator.processor.RetryDecoratorDelegate/retryableProcess/Retry/maxDuration=${kafkastreamsprocessor.retry.max-duration}
io.quarkiverse.kafkastreamsprocessor.impl.decorator.processor.RetryDecoratorDelegate/retryableProcess/Retry/durationUnit=${kafkastreamsprocessor.retry.duration-unit}
io.quarkiverse.kafkastreamsprocessor.impl.decorator.processor.RetryDecoratorDelegate/retryableProcess/Retry/jitter=${kafkastreamsprocessor.retry.jitter}
io.quarkiverse.kafkastreamsprocessor.impl.decorator.processor.RetryDecoratorDelegate/retryableProcess/Retry/jitterDelayUnit=${kafkastreamsprocessor.retry.jitter-delay-unit}
io.quarkiverse.kafkastreamsprocessor.impl.decorator.processor.RetryDecoratorDelegate/retryableProcess/Retry/retryOn=${kafkastreamsprocessor.retry.retry-on}
io.quarkiverse.kafkastreamsprocessor.impl.decorator.processor.RetryDecoratorDelegate/retryableProcess/Retry/abortOn=${kafkastreamsprocessor.retry.abort-on}
# Notify Kafka on pod shutdown to react faster to topology changes
# Warning: This setting is not public and may disappear. https://issues.apache.org/jira/browse/KAFKA-6995
kafka-streams.internal.leave.group.on.close=true
# Deactivate exposure of metrics through JMX beans
# It is still adding a mxBean in AppInfoParser though
kafka-streams.auto.include.jmx.reporter=false
# without this, because we are using CDI Decorators with generics, QuarkusTests start to be flaky
# To be removed in 3.16 with this fix? https://github.com/quarkusio/quarkus/pull/43245
quarkus.test.flat-class-path=true
